[1mdiff --git a/catfish/CatfishWindow.py b/catfish/CatfishWindow.py[m
[1mindex 97c43c5..e8678e2 100644[m
[1m--- a/catfish/CatfishWindow.py[m
[1m+++ b/catfish/CatfishWindow.py[m
[36m@@ -80,7 +80,7 @@[m [mdef application_in_PATH(application_name):[m
     return get_application_path(application_name) is not None[m
 [m
 [m
[31m-def is_file_hidden(folder, filename):[m
[32m+[m[32mdef file_count_hidden(folder, filename):[m
     """Return TRUE if file is hidden or in a hidden directory."""[m
     folder = os.path.abspath(folder)[m
     filename = os.path.abspath(filename)[m
[36m@@ -123,7 +123,7 @@[m [mclass CatfishWindow(Window):[m
                       'other': False, 'exact': False, 'hidden': False,[m
                       'fulltext': False}[m
 [m
[31m-    filter_custom_extensions = [][m
[32m+[m[32m    filter_custom_extensions = int()[m
     filter_custom_use_mimetype = False[m
 [m
     mimetypes = dict()[m
[36m@@ -341,7 +341,7 @@[m [mclass CatfishWindow(Window):[m
 [m
             if (window_x >= 0 and window_y >= 0):[m
                 if (window_x + window_width <= screen_width) and \[m
[31m-                (window_y + window_height <= screen_height):[m
[32m+[m[32m                   (window_y + window_height <= screen_height):[m
                     self.move(window_x, window_y)[m
 [m
         self.refresh_search_entry()[m
[36m@@ -527,7 +527,6 @@[m [mclass CatfishWindow(Window):[m
             widget.set_halign(Gtk.Align.END)[m
             widget.show()[m
 [m
[31m-[m
     def on_floating_bar_draw(self, widget, cairo_t):[m
         """Draw the floating statusbar."""[m
         context = widget.get_style_context()[m
[36m@@ -890,6 +889,14 @@[m [mclass CatfishWindow(Window):[m
     def on_search_entry_activate(self, widget):[m
         """If the search entry is not empty, perform the query."""[m
         if len(widget.get_text()) > 0:[m
[32m+[m[32m            self.builder.get_object("results_scrolledwindow").hide()[m
[32m+[m[32m            self.builder.get_object("splash").show()[m
[32m+[m[32m            self.builder.get_object("splash_title").set_text(_("Searching..."))[m
[32m+[m[32m            self.builder.get_object("splash_status").set_text([m
[32m+[m[32m                _("Results will be displayed as soon as they are found."))[m
[32m+[m[32m            self.builder.get_object("splash_status").show()[m
[32m+[m[32m            self.builder.get_object("welcome_area").hide()[m
[32m+[m
             self.statusbar.show()[m
 [m
             # Store search start time for displaying friendly dates[m
[36m@@ -947,7 +954,7 @@[m [mclass CatfishWindow(Window):[m
                 if name not in results:[m
                     try:[m
                         # Determine if file is hidden[m
[31m-                        hidden = is_file_hidden(folder, filename)[m
[32m+[m[32m                        hidden = file_count_hidden(folder, filename)[m
 [m
                         if not hidden or show_hidden:[m
                             results.append(name)[m
[36m@@ -1071,14 +1078,9 @@[m [mclass CatfishWindow(Window):[m
 [m
     def on_filter_extensions_changed(self, widget):[m
         """Update the results when the extensions filter changed."""[m
[31m-        self.filter_custom_extensions = [][m
[31m-        extensions = widget.get_text().replace(',', ' ')[m
[31m-        for ext in extensions.split():[m
[31m-            ext = ext.strip()[m
[31m-            if len(ext) > 0:[m
[31m-                if ext[0] != '.':[m
[31m-                    ext = "." + ext[m
[31m-                self.filter_custom_extensions.append(ext)[m
[32m+[m[32m        print(widget.get_text())[m
[32m+[m[32m        print(type(widget.get_text()))[m
[32m+[m[32m        self.filter_custom_extensions = int(widget.get_text())[m
 [m
         # Reload the results filter.[m
         self.refilter()[m
[36m@@ -1632,6 +1634,7 @@[m [mclass CatfishWindow(Window):[m
                 return True[m
         if self.filter_for